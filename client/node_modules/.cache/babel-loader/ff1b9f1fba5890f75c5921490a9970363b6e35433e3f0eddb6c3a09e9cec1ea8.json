{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Path = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst BezierFunctions_1 = require(\"../BezierFunctions\");\nclass Path extends Shape_1.Shape {\n  constructor(config) {\n    super(config);\n    this.dataArray = [];\n    this.pathLength = 0;\n    this._readDataAttribute();\n    this.on('dataChange.konva', function () {\n      this._readDataAttribute();\n    });\n  }\n  _readDataAttribute() {\n    this.dataArray = Path.parsePathData(this.data());\n    this.pathLength = Path.getPathLength(this.dataArray);\n  }\n  _sceneFunc(context) {\n    var ca = this.dataArray;\n    context.beginPath();\n    var isClosed = false;\n    for (var n = 0; n < ca.length; n++) {\n      var c = ca[n].command;\n      var p = ca[n].points;\n      switch (c) {\n        case 'L':\n          context.lineTo(p[0], p[1]);\n          break;\n        case 'M':\n          context.moveTo(p[0], p[1]);\n          break;\n        case 'C':\n          context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n          break;\n        case 'Q':\n          context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n          break;\n        case 'A':\n          var cx = p[0],\n            cy = p[1],\n            rx = p[2],\n            ry = p[3],\n            theta = p[4],\n            dTheta = p[5],\n            psi = p[6],\n            fs = p[7];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          context.translate(cx, cy);\n          context.rotate(psi);\n          context.scale(scaleX, scaleY);\n          context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n          context.scale(1 / scaleX, 1 / scaleY);\n          context.rotate(-psi);\n          context.translate(-cx, -cy);\n          break;\n        case 'z':\n          isClosed = true;\n          context.closePath();\n          break;\n      }\n    }\n    if (!isClosed && !this.hasFill()) {\n      context.strokeShape(this);\n    } else {\n      context.fillStrokeShape(this);\n    }\n  }\n  getSelfRect() {\n    var points = [];\n    this.dataArray.forEach(function (data) {\n      if (data.command === 'A') {\n        var start = data.points[4];\n        var dTheta = data.points[5];\n        var end = data.points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        if (dTheta < 0) {\n          for (let t = start - inc; t > end; t -= inc) {\n            const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        } else {\n          for (let t = start + inc; t < end; t += inc) {\n            const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n            points.push(point.x, point.y);\n          }\n        }\n      } else if (data.command === 'C') {\n        for (let t = 0.0; t <= 1; t += 0.01) {\n          const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n          points.push(point.x, point.y);\n        }\n      } else {\n        points = points.concat(data.points);\n      }\n    });\n    var minX = points[0];\n    var maxX = points[0];\n    var minY = points[1];\n    var maxY = points[1];\n    var x, y;\n    for (var i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n      if (!isNaN(x)) {\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n      }\n      if (!isNaN(y)) {\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n    }\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n  getLength() {\n    return this.pathLength;\n  }\n  getPointAtLength(length) {\n    return Path.getPointAtLengthOfDataArray(length, this.dataArray);\n  }\n  static getLineLength(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  static getPathLength(dataArray) {\n    let pathLength = 0;\n    for (var i = 0; i < dataArray.length; ++i) {\n      pathLength += dataArray[i].pathLength;\n    }\n    return pathLength;\n  }\n  static getPointAtLengthOfDataArray(length, dataArray) {\n    var point,\n      i = 0,\n      ii = dataArray.length;\n    if (!ii) {\n      return null;\n    }\n    while (i < ii && length > dataArray[i].pathLength) {\n      length -= dataArray[i].pathLength;\n      ++i;\n    }\n    if (i === ii) {\n      point = dataArray[i - 1].points.slice(-2);\n      return {\n        x: point[0],\n        y: point[1]\n      };\n    }\n    if (length < 0.01) {\n      point = dataArray[i].points.slice(0, 2);\n      return {\n        x: point[0],\n        y: point[1]\n      };\n    }\n    var cp = dataArray[i];\n    var p = cp.points;\n    switch (cp.command) {\n      case 'L':\n        return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n      case 'C':\n        return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), i => {\n          return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\n        }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n      case 'Q':\n        return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), i => {\n          return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\n        }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n      case 'A':\n        var cx = p[0],\n          cy = p[1],\n          rx = p[2],\n          ry = p[3],\n          theta = p[4],\n          dTheta = p[5],\n          psi = p[6];\n        theta += dTheta * length / cp.pathLength;\n        return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n    }\n    return null;\n  }\n  static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    fromX = fromX !== null && fromX !== void 0 ? fromX : P1x;\n    fromY = fromY !== null && fromY !== void 0 ? fromY : P1y;\n    const len = this.getLineLength(P1x, P1y, P2x, P2y);\n    if (len < 1e-10) {\n      return {\n        x: P1x,\n        y: P1y\n      };\n    }\n    if (P2x === P1x) {\n      return {\n        x: fromX,\n        y: fromY + (P2y > P1y ? dist : -dist)\n      };\n    }\n    const m = (P2y - P1y) / (P2x - P1x);\n    const run = Math.sqrt(dist * dist / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n    const rise = m * run;\n    if (Math.abs(fromY - P1y - m * (fromX - P1x)) < 1e-10) {\n      return {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    }\n    const u = ((fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y)) / (len * len);\n    const ix = P1x + u * (P2x - P1x);\n    const iy = P1y + u * (P2y - P1y);\n    const pRise = this.getLineLength(fromX, fromY, ix, iy);\n    const pRun = Math.sqrt(dist * dist - pRise * pRise);\n    const adjustedRun = Math.sqrt(pRun * pRun / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n    const adjustedRise = m * adjustedRun;\n    return {\n      x: ix + adjustedRun,\n      y: iy + adjustedRise\n    };\n  }\n  static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n    function CB1(t) {\n      return t * t * t;\n    }\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n    return {\n      x: x,\n      y: y\n    };\n  }\n  static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n    function QB1(t) {\n      return t * t;\n    }\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n    return {\n      x: x,\n      y: y\n    };\n  }\n  static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi),\n      sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  }\n  static parsePathData(data) {\n    if (!data) {\n      return [];\n    }\n    var cs = data;\n    var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n    var arr = cs.split('|');\n    var ca = [];\n    var coords = [];\n    var cpx = 0;\n    var cpy = 0;\n    var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n    var match;\n    for (n = 1; n < arr.length; n++) {\n      var str = arr[n];\n      var c = str.charAt(0);\n      str = str.slice(1);\n      coords.length = 0;\n      while (match = re.exec(str)) {\n        coords.push(match[0]);\n      }\n      var p = [];\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        if (coords[j] === '00') {\n          p.push(0, 0);\n          continue;\n        }\n        var parsed = parseFloat(coords[j]);\n        if (!isNaN(parsed)) {\n          p.push(parsed);\n        } else {\n          p.push(0);\n        }\n      }\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          break;\n        }\n        var cmd = '';\n        var points = [];\n        var startX = cpx,\n          startY = cpy;\n        var prevCmd, ctlPtx, ctlPty;\n        var rx, ry, psi, fa, fs, x1, y1;\n        switch (c) {\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (var idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n            points.push(cpx, cpy);\n            c = 'l';\n            break;\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            break;\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'c':\n            points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n            break;\n        }\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n    return ca;\n  }\n  static calcLength(x, y, cmd, points) {\n    var len, p1, p2, t;\n    var path = Path;\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n      case 'C':\n        return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\n      case 'Q':\n        return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\n      case 'A':\n        len = 0.0;\n        var start = points[4];\n        var dTheta = points[5];\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n        if (dTheta < 0) {\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n        return len;\n    }\n    return 0;\n  }\n  static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n    var psi = psiDeg * (Math.PI / 180.0);\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n    var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n    if (fa === fs) {\n      f *= -1;\n    }\n    if (isNaN(f)) {\n      f = 0;\n    }\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n    var vMag = function (v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function (u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function (u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  }\n}\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n(0, Global_1._registerNode)(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');","map":{"version":3,"names":["Object","defineProperty","exports","value","Path","Factory_1","require","Shape_1","Global_1","BezierFunctions_1","Shape","constructor","config","dataArray","pathLength","_readDataAttribute","on","parsePathData","data","getPathLength","_sceneFunc","context","ca","beginPath","isClosed","n","length","c","command","p","points","lineTo","moveTo","bezierCurveTo","quadraticCurveTo","cx","cy","rx","ry","theta","dTheta","psi","fs","r","scaleX","scaleY","translate","rotate","scale","arc","closePath","hasFill","strokeShape","fillStrokeShape","getSelfRect","forEach","start","end","inc","Math","PI","abs","t","point","getPointOnEllipticalArc","push","x","y","getPointOnCubicBezier","concat","minX","maxX","minY","maxY","i","isNaN","min","max","width","height","getLength","getPointAtLength","getPointAtLengthOfDataArray","getLineLength","x1","y1","x2","y2","sqrt","ii","slice","cp","getPointOnLine","t2length","getCubicArcLength","getPointOnQuadraticBezier","getQuadraticArcLength","dist","P1x","P1y","P2x","P2y","fromX","fromY","len","m","run","rise","u","ix","iy","pRise","pRun","adjustedRun","adjustedRise","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","QB1","QB2","QB3","cosPsi","cos","sinPsi","sin","pt","cs","cc","replace","RegExp","arr","split","coords","cpx","cpy","re","match","str","charAt","exec","j","jlen","parsed","parseFloat","cmd","startX","startY","prevCmd","ctlPtx","ctlPty","fa","shift","dx","dy","idx","convertEndpointToCenterParameterization","calcLength","undefined","p1","p2","path","psiDeg","xp","yp","lambda","f","cxp","cyp","vMag","v","vRatio","vAngle","acos","prototype","className","_attrsAffectingSize","_registerNode","Factory","addGetterSetter"],"sources":["/Users/alexanderjarvheden/Projects/DD1367-Software-Engineering-in-Project-Form/client/node_modules/konva/lib/shapes/Path.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Path = void 0;\nconst Factory_1 = require(\"../Factory\");\nconst Shape_1 = require(\"../Shape\");\nconst Global_1 = require(\"../Global\");\nconst BezierFunctions_1 = require(\"../BezierFunctions\");\nclass Path extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this._readDataAttribute();\n        this.on('dataChange.konva', function () {\n            this._readDataAttribute();\n        });\n    }\n    _readDataAttribute() {\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = Path.getPathLength(this.dataArray);\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        return Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPathLength(dataArray) {\n        let pathLength = 0;\n        for (var i = 0; i < dataArray.length; ++i) {\n            pathLength += dataArray[i].pathLength;\n        }\n        return pathLength;\n    }\n    static getPointAtLengthOfDataArray(length, dataArray) {\n        var point, i = 0, ii = dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > dataArray[i].pathLength) {\n            length -= dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        fromX = fromX !== null && fromX !== void 0 ? fromX : P1x;\n        fromY = fromY !== null && fromY !== void 0 ? fromY : P1y;\n        const len = this.getLineLength(P1x, P1y, P2x, P2y);\n        if (len < 1e-10) {\n            return { x: P1x, y: P1y };\n        }\n        if (P2x === P1x) {\n            return { x: fromX, y: fromY + (P2y > P1y ? dist : -dist) };\n        }\n        const m = (P2y - P1y) / (P2x - P1x);\n        const run = Math.sqrt((dist * dist) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n        const rise = m * run;\n        if (Math.abs(fromY - P1y - m * (fromX - P1x)) < 1e-10) {\n            return { x: fromX + run, y: fromY + rise };\n        }\n        const u = ((fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y)) / (len * len);\n        const ix = P1x + u * (P2x - P1x);\n        const iy = P1y + u * (P2y - P1y);\n        const pRise = this.getLineLength(fromX, fromY, ix, iy);\n        const pRun = Math.sqrt(dist * dist - pRise * pRise);\n        const adjustedRun = Math.sqrt((pRun * pRun) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n        const adjustedRise = m * adjustedRun;\n        return { x: ix + adjustedRun, y: iy + adjustedRise };\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = '';\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\n            case 'Q':\n                return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n(0, Global_1._registerNode)(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}