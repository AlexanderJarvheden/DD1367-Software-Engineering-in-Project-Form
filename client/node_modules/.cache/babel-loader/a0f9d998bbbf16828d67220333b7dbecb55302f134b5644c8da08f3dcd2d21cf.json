{"ast":null,"code":"import Konva from 'konva/lib/Core.js';\nimport { applyNodeProps, updatePicture, EVENTS_NAMESPACE } from './makeUpdates.js';\nexport { unstable_now as now, unstable_IdlePriority as idlePriority, unstable_runWithPriority as run } from 'scheduler';\nimport { DefaultEventPriority } from 'react-reconciler/constants.js';\nconst NO_CONTEXT = {};\nconst UPDATE_SIGNAL = {};\n// for react-spring capability\nKonva.Node.prototype._applyProps = applyNodeProps;\nexport function appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>foo</Text>)\n    console.error(`Do not use plain text as child of Konva.Node. You are using text: ${child}`);\n    return;\n  }\n  parentInstance.add(child);\n  updatePicture(parentInstance);\n}\nexport function createInstance(type, props, internalInstanceHandle) {\n  let NodeClass = Konva[type];\n  if (!NodeClass) {\n    console.error(`Konva has no node with the type ${type}. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/${type}\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html`);\n    NodeClass = Konva.Group;\n  }\n  // we need to split props into events and non events\n  // we we can pass non events into constructor directly\n  // that way the performance should be better\n  // we we apply change \"applyNodeProps\"\n  // then it will trigger change events on first run\n  // but we don't need them!\n  const propsWithoutEvents = {};\n  const propsWithOnlyEvents = {};\n  for (var key in props) {\n    var isEvent = key.slice(0, 2) === 'on';\n    if (isEvent) {\n      propsWithOnlyEvents[key] = props[key];\n    } else {\n      propsWithoutEvents[key] = props[key];\n    }\n  }\n  const instance = new NodeClass(propsWithoutEvents);\n  applyNodeProps(instance, propsWithOnlyEvents);\n  return instance;\n}\nexport function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n  console.error(`Text components are not supported for now in ReactKonva. Your text is: \"${text}\"`);\n}\nexport function finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\nexport function getPublicInstance(instance) {\n  return instance;\n}\nexport function prepareForCommit() {\n  return null;\n}\nexport function preparePortalMount() {\n  return null;\n}\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\nexport function resetAfterCommit() {\n  // Noop\n}\nexport function resetTextContent(domElement) {\n  // Noop\n}\nexport function shouldDeprioritizeSubtree(type, props) {\n  return false;\n}\nexport function getRootHostContext() {\n  return NO_CONTEXT;\n}\nexport function getChildHostContext() {\n  return NO_CONTEXT;\n}\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n// export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\nexport function shouldSetTextContent(type, props) {\n  return false;\n}\n// The Konva renderer is secondary to the React DOM renderer.\nexport const isPrimaryRenderer = false;\nexport const warnsIfNotActing = true;\nexport const supportsMutation = true;\nexport function appendChild(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n  updatePicture(parentInstance);\n}\nexport function appendChildToContainer(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n  updatePicture(parentInstance);\n}\nexport function insertBefore(parentInstance, child, beforeChild) {\n  // child._remove() will not stop dragging\n  // but child.remove() will stop it, but we don't need it\n  // removing will reset zIndexes\n  child._remove();\n  parentInstance.add(child);\n  child.setZIndex(beforeChild.getZIndex());\n  updatePicture(parentInstance);\n}\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n  insertBefore(parentInstance, child, beforeChild);\n}\nexport function removeChild(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\nexport function removeChildFromContainer(parentInstance, child) {\n  child.destroy();\n  child.off(EVENTS_NAMESPACE);\n  updatePicture(parentInstance);\n}\nexport function commitTextUpdate(textInstance, oldText, newText) {\n  console.error(`Text components are not yet supported in ReactKonva. You text is: \"${newText}\"`);\n}\nexport function commitMount(instance, type, newProps) {\n  // Noop\n}\nexport function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n  applyNodeProps(instance, newProps, oldProps);\n}\nexport function hideInstance(instance) {\n  instance.hide();\n  updatePicture(instance);\n}\nexport function hideTextInstance(textInstance) {\n  // Noop\n}\nexport function unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\nexport function unhideTextInstance(textInstance, text) {\n  // Noop\n}\nexport function clearContainer(container) {\n  // Noop\n}\nexport function detachDeletedInstance() {}\nexport const getCurrentEventPriority = () => DefaultEventPriority;","map":{"version":3,"names":["Konva","applyNodeProps","updatePicture","EVENTS_NAMESPACE","unstable_now","now","unstable_IdlePriority","idlePriority","unstable_runWithPriority","run","DefaultEventPriority","NO_CONTEXT","UPDATE_SIGNAL","Node","prototype","_applyProps","appendInitialChild","parentInstance","child","console","error","add","createInstance","type","props","internalInstanceHandle","NodeClass","Group","propsWithoutEvents","propsWithOnlyEvents","key","isEvent","slice","instance","createTextInstance","text","rootContainerInstance","finalizeInitialChildren","domElement","getPublicInstance","prepareForCommit","preparePortalMount","prepareUpdate","oldProps","newProps","resetAfterCommit","resetTextContent","shouldDeprioritizeSubtree","getRootHostContext","getChildHostContext","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","isPrimaryRenderer","warnsIfNotActing","supportsMutation","appendChild","parent","moveToTop","appendChildToContainer","insertBefore","beforeChild","_remove","setZIndex","getZIndex","insertInContainerBefore","removeChild","destroy","off","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitMount","commitUpdate","updatePayload","hideInstance","hide","hideTextInstance","unhideInstance","visible","show","unhideTextInstance","clearContainer","container","detachDeletedInstance","getCurrentEventPriority"],"sources":["/Users/alexanderjarvheden/Projects/DD1367-Software-Engineering-in-Project-Form/client/node_modules/react-konva/es/ReactKonvaHostConfig.js"],"sourcesContent":["import Konva from 'konva/lib/Core.js';\nimport { applyNodeProps, updatePicture, EVENTS_NAMESPACE } from './makeUpdates.js';\nexport { unstable_now as now, unstable_IdlePriority as idlePriority, unstable_runWithPriority as run, } from 'scheduler';\nimport { DefaultEventPriority } from 'react-reconciler/constants.js';\nconst NO_CONTEXT = {};\nconst UPDATE_SIGNAL = {};\n// for react-spring capability\nKonva.Node.prototype._applyProps = applyNodeProps;\nexport function appendInitialChild(parentInstance, child) {\n    if (typeof child === 'string') {\n        // Noop for string children of Text (eg <Text>foo</Text>)\n        console.error(`Do not use plain text as child of Konva.Node. You are using text: ${child}`);\n        return;\n    }\n    parentInstance.add(child);\n    updatePicture(parentInstance);\n}\nexport function createInstance(type, props, internalInstanceHandle) {\n    let NodeClass = Konva[type];\n    if (!NodeClass) {\n        console.error(`Konva has no node with the type ${type}. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/${type}\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html`);\n        NodeClass = Konva.Group;\n    }\n    // we need to split props into events and non events\n    // we we can pass non events into constructor directly\n    // that way the performance should be better\n    // we we apply change \"applyNodeProps\"\n    // then it will trigger change events on first run\n    // but we don't need them!\n    const propsWithoutEvents = {};\n    const propsWithOnlyEvents = {};\n    for (var key in props) {\n        var isEvent = key.slice(0, 2) === 'on';\n        if (isEvent) {\n            propsWithOnlyEvents[key] = props[key];\n        }\n        else {\n            propsWithoutEvents[key] = props[key];\n        }\n    }\n    const instance = new NodeClass(propsWithoutEvents);\n    applyNodeProps(instance, propsWithOnlyEvents);\n    return instance;\n}\nexport function createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n    console.error(`Text components are not supported for now in ReactKonva. Your text is: \"${text}\"`);\n}\nexport function finalizeInitialChildren(domElement, type, props) {\n    return false;\n}\nexport function getPublicInstance(instance) {\n    return instance;\n}\nexport function prepareForCommit() {\n    return null;\n}\nexport function preparePortalMount() {\n    return null;\n}\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n    return UPDATE_SIGNAL;\n}\nexport function resetAfterCommit() {\n    // Noop\n}\nexport function resetTextContent(domElement) {\n    // Noop\n}\nexport function shouldDeprioritizeSubtree(type, props) {\n    return false;\n}\nexport function getRootHostContext() {\n    return NO_CONTEXT;\n}\nexport function getChildHostContext() {\n    return NO_CONTEXT;\n}\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n// export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\nexport function shouldSetTextContent(type, props) {\n    return false;\n}\n// The Konva renderer is secondary to the React DOM renderer.\nexport const isPrimaryRenderer = false;\nexport const warnsIfNotActing = true;\nexport const supportsMutation = true;\nexport function appendChild(parentInstance, child) {\n    if (child.parent === parentInstance) {\n        child.moveToTop();\n    }\n    else {\n        parentInstance.add(child);\n    }\n    updatePicture(parentInstance);\n}\nexport function appendChildToContainer(parentInstance, child) {\n    if (child.parent === parentInstance) {\n        child.moveToTop();\n    }\n    else {\n        parentInstance.add(child);\n    }\n    updatePicture(parentInstance);\n}\nexport function insertBefore(parentInstance, child, beforeChild) {\n    // child._remove() will not stop dragging\n    // but child.remove() will stop it, but we don't need it\n    // removing will reset zIndexes\n    child._remove();\n    parentInstance.add(child);\n    child.setZIndex(beforeChild.getZIndex());\n    updatePicture(parentInstance);\n}\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n    insertBefore(parentInstance, child, beforeChild);\n}\nexport function removeChild(parentInstance, child) {\n    child.destroy();\n    child.off(EVENTS_NAMESPACE);\n    updatePicture(parentInstance);\n}\nexport function removeChildFromContainer(parentInstance, child) {\n    child.destroy();\n    child.off(EVENTS_NAMESPACE);\n    updatePicture(parentInstance);\n}\nexport function commitTextUpdate(textInstance, oldText, newText) {\n    console.error(`Text components are not yet supported in ReactKonva. You text is: \"${newText}\"`);\n}\nexport function commitMount(instance, type, newProps) {\n    // Noop\n}\nexport function commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    applyNodeProps(instance, newProps, oldProps);\n}\nexport function hideInstance(instance) {\n    instance.hide();\n    updatePicture(instance);\n}\nexport function hideTextInstance(textInstance) {\n    // Noop\n}\nexport function unhideInstance(instance, props) {\n    if (props.visible == null || props.visible) {\n        instance.show();\n    }\n}\nexport function unhideTextInstance(textInstance, text) {\n    // Noop\n}\nexport function clearContainer(container) {\n    // Noop\n}\nexport function detachDeletedInstance() { }\nexport const getCurrentEventPriority = () => DefaultEventPriority;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}